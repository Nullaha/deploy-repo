import{j as i,y as m,eD as $,k as S,fe as C,A as F,s as f,ak as E,b as q,g as R,q as U,aG as V}from"./index-CVDLrp1o.js";import"./index-BFBhJYcK.js";import{a as M}from"./BitmapContainer-BR0O9Maj.js";import{m as L,u as W}from"./LayerView-SFmtYB1p.js";import{v as A}from"./ExportStrategy-DODxmeeq.js";import{i as H}from"./RefreshableLayerView-BuD59w6d.js";import"./WGLContainer-D66aSABH.js";import"./LabelMetric-CrmUyWB0.js";import"./Texture-B-peWxCC.js";import"./Program-BYGE1_ge.js";import"./ProgramTemplate-Uin_EVU1.js";import"./Container-VgrbFXpy.js";import"./highlightReasons-BNlAbThX.js";import"./config-MDUrh2eL.js";import"./earcut-DsRfZTli.js";import"./Bitmap-BV3ariZJ.js";const j=e=>{let t=class extends e{initialize(){this.exportImageParameters=new C({layer:this.layer})}destroy(){this.exportImageParameters=F(this.exportImageParameters)}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}async fetchPopupFeaturesAtLocation(r,s){const{layer:o}=this;if(!r)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:o});const{popupEnabled:d}=o;if(!d)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:d});const a=this.createFetchPopupFeaturesQuery(r);if(!a)return[];const{extent:n,width:p,height:h,x:c,y}=a;if(!(n&&p&&h))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:n,width:p,height:h});const g=await o.fetchFeatureInfo(n,p,h,c,y);return E(s),g}};return i([m()],t.prototype,"exportImageParameters",void 0),i([m({readOnly:!0})],t.prototype,"exportImageVersion",null),i([m()],t.prototype,"layer",void 0),i([m($)],t.prototype,"timeExtent",void 0),t=i([S("esri.layers.mixins.WMSLayerView")],t),t};let u=class extends j(H(L(W))){constructor(){super(...arguments),this.bitmapContainer=new M}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch(t=>{q(t)||R.getLogger(this).error(t)})}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:r}=e;this.bitmapContainer=new M,this.container.addChild(this.bitmapContainer),this.strategy=new A({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(U(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=F(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,bitmapContainer:r}=this,{x:s,y:o}=e,{spatialReference:d}=t;let a,n=0,p=0;if(r.children.some(g=>{const{width:w,height:v,resolution:b,x:l,y:x}=g,I=l+b*w,P=x-b*v;return s>=l&&s<=I&&o<=x&&o>=P&&(a=new V({xmin:l,ymin:P,xmax:I,ymax:x,spatialReference:d}),n=w,p=v,!0)}),!a)return null;const h=a.width/n,c=Math.round((s-a.xmin)/h),y=Math.round((a.ymax-o)/h);return{extent:a,width:n,height:p,x:c,y}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,s){return this.layer.fetchImageBitmap(e,t,r,{timeExtent:this.timeExtent,...s})}};i([m()],u.prototype,"strategy",void 0),i([m()],u.prototype,"updating",void 0),u=i([S("esri.views.2d.layers.WMSLayerView2D")],u);const et=u;export{et as default};
