import{v as y,b3 as E,B as S,aG as w,ai as D,bw as M,bx as h,g as N}from"./index-DaqWdlbg.js";import{$ as g}from"./Mesh-CjxHlnWH.js";import{d as F}from"./georeference-DZX_Ljfu.js";import{o as T,i as b}from"./External-Hs-17mtY.js";import"./index-CW9mWlpJ.js";import"./imageUtils-CC0oq4DV.js";import"./MeshLocalVertexSpace-Bc75jK6m.js";import"./meshVertexSpaceUtils-Ctd2eoBe.js";import"./vec3-BL3yri3Q.js";import"./earcut-Bgzs-wv1.js";import"./DoubleArray-BXCJsP2_.js";import"./Indices-Dc5ZRhyR.js";import"./deduplicate-9SSKgNqK.js";import"./plane-B2XD5Zkb.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./quatf64-Bdb9ZJJK.js";import"./triangle-UcprHAPT.js";import"./Util-B9oFrtcG.js";import"./ObjectStack-BmCgrlab.js";import"./lineSegment-C7bTbgbj.js";import"./basicInterfaces-GbxEOYtk.js";import"./VertexAttribute-BlT9lbVY.js";import"./quat-DM6FFqh1.js";import"./computeTranslationToOriginAndRotation-nRI77giY.js";import"./BufferView-Bg1XXOrD.js";const l=()=>N.getLogger("esri.rest.support.meshFeatureSet");function at(t,e,r){const o=r.features;r.features=[],delete r.geometryType;const n=y.fromJSON(r);if(n.geometryType="mesh",!r.assetMaps)return n;const s=$(e,r.assetMaps),i=t.sourceSpatialReference??E.WGS84,p=r.globalIdFieldName,{outFields:a}=t,c=a!=null&&a.length>0?x(a.includes("*")?null:new Set(a)):()=>({});for(const m of o){const u=I(m,p,i,e,s);u!=null&&n.features.push(new S({geometry:u,attributes:c(m)}))}return n}function x(t){return({attributes:e})=>{if(!e)return{};if(!t)return e;for(const r in e)t.has(r)||delete e[r];return e}}function I(t,e,r,o,n){const s=t.attributes[e],i=n.get(s);if(i==null)return l().error("mesh-feature-set:asset-not-found","Service returned a feature which was not found in the asset map",t),null;if(!t.geometry)return l().error("mesh-feature-set:no-geometry","Service returned a feature without geometry",t),null;const p=L(t,r,o),a=w.fromJSON(t.geometry);a.spatialReference=r;const c=O(t.attributes,o),m=r.isGeographic?"local":"georeferenced",u=v(i);return u?g.createWithExternalSource(p,u,{extent:a,transform:c,vertexSpace:m}):g.createIncomplete(p,{extent:a,transform:c,vertexSpace:m})}function L({attributes:t},e,{transformFieldRoles:r}){const o=t[r.originX],n=t[r.originY],s=t[r.originZ];return new D({x:o,y:n,z:s,spatialReference:e})}function O(t,{transformFieldRoles:e}){return new F({translation:[t[e.translationX],-t[e.translationZ],t[e.translationY]],rotationAxis:[t[e.rotationX],-t[e.rotationZ],t[e.rotationY]],rotationAngle:t[e.rotationDeg],scale:[t[e.scaleX],t[e.scaleZ],t[e.scaleY]]})}var f;function $(t,e){const r=new Map;for(const o of e){const n=o.parentGlobalId;if(n==null)continue;const s=o.assetName,i=o.assetType,p=o.assetHash,a=o.assetURL,c=o.conversionStatus,m=o.seqNo,u=M(i,t.supportedFormats);if(!u){l().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const d=h(r,n,()=>({files:new Map}));h(d.files,s,()=>({name:s,type:i,mimeType:u,status:A(c),parts:[]})).parts[m]={hash:p,url:a}}return r}function v(t){const e=Array.from(t.files.values()),r=new Array;for(const o of e){if(o.status!==f.COMPLETED)return null;const n=new Array;for(const s of o.parts){if(!s)return null;n.push(new T(s.url,s.hash))}r.push(new b(o.name,o.mimeType,n))}return r}function A(t){switch(t){case"COMPLETED":case"SUBMITTED":return f.COMPLETED;case"INPROGRESS":return f.PENDING;default:return f.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(f||(f={}));export{$ as assetMapFromAssetMapsJSON,I as extractMesh,at as meshFeatureSetFromJSON};
